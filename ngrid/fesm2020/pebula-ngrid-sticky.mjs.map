{"version":3,"file":"pebula-ngrid-sticky.mjs","sources":["../../../../libs/ngrid/sticky/src/lib/sticky/sticky-plugin.ts","../../../../libs/ngrid/sticky/src/lib/sticky.module.ts","../../../../libs/ngrid/sticky/src/pebula-ngrid-sticky.ts"],"sourcesContent":["import { Directive, Input, IterableDiffers, IterableDiffer, IterableChangeRecord, OnDestroy, AfterViewInit } from '@angular/core';\n\nimport { ON_INVALIDATE_HEADERS, ON_RESIZE_ROW } from '@asafmalin/ngrid/core';\nimport { PblNgridComponent, PblNgridPluginController } from '@asafmalin/ngrid';\n\n\ndeclare module '@asafmalin/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    sticky?: PblNgridStickyPluginDirective;\n  }\n}\n\nexport const PLUGIN_KEY: 'sticky' = 'sticky';\n\nexport function setStickyRow(grid: PblNgridComponent<any>, type: 'header' | 'footer', bulk: Array<['table' | number, boolean]>): void;\nexport function setStickyRow(grid: PblNgridComponent<any>, type: 'header' | 'footer', value: 'table' | number, state: boolean): void;\nexport function setStickyRow(grid: PblNgridComponent<any>, type: 'header' | 'footer', valueOrBulk: Array<['table' | number, boolean]> | 'table' | number, state?: boolean): void {\n  const isHeader = type === 'header';\n  const queryList = isHeader ? grid._headerRowDefs : grid._footerRowDefs;\n  const bulk: Array<['table' | number, boolean]> = Array.isArray(valueOrBulk) ? valueOrBulk : [ [valueOrBulk, state] ];\n\n  const addOneIfMainExists = (isHeader && grid.showHeader) || (!isHeader && grid.showFooter) ? 1 : 0;\n\n  let changed: boolean;\n  for (const [value, state] of bulk) {\n    // the index from the user is 0 based or the grid header/footer row.\n    // we store them both, so we need to convert... our first is always the grid header/footer and then we have the same order as the user's.\n    let idx = value === 'table' ? 0 : value + addOneIfMainExists;\n    if (!isHeader) {\n      // sticky-styler stickRows() methods will reverse the order of footer columns\n      // so we actually need to set another row to make the row we want sticky.\n      // we could reverse the collection, but choosing the opposite side is better.\n      // think [0, 1, 2, 3, 4] and we want 1. sticky-styler will reverse to [4, 3, 2, 1, 0] so doing nothing will stick 3.\n      // the opposite is length MINUS 1 MINUS index which is 5 - 1 - 1 which is 3, in the revered array its the row 1 which is what we wanted.\n      idx = (queryList.length - 1) - idx;\n    }\n\n    const rowDef = queryList.toArray()[idx];\n    if (rowDef && rowDef.sticky !== state) {\n      rowDef.sticky = state;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    const cdkTable = PblNgridPluginController.find(grid).extApi.cdkTable;\n    if (isHeader) {\n      cdkTable.updateStickyHeaderRowStyles();\n    } else {\n      cdkTable.updateStickyFooterRowStyles();\n    }\n  }\n}\n\nexport function setStickyColumns(grid: PblNgridComponent<any>, type: 'start' | 'end', bulk: Array<[string | number, boolean]>): void;\nexport function setStickyColumns(grid: PblNgridComponent<any>, type: 'start' | 'end', value: string  | number, state: boolean): void;\nexport function setStickyColumns(grid: PblNgridComponent<any>, type: 'start' | 'end', valueOrBulk: Array<[string  | number, boolean]> | string  | number, state?: boolean): void {\n  const bulk: Array<[string | number, boolean]> = Array.isArray(valueOrBulk) ? valueOrBulk : [ [valueOrBulk, state] ];\n  let changed: boolean;\n  for (let [columnId, state] of bulk) {\n    if (typeof columnId === 'string') {\n      columnId = grid.columnApi.visibleColumns.findIndex( c => c.orgProp === columnId );\n    }\n    const c = grid.columnApi.visibleColumns[columnId];\n    if (c) {\n      changed = true;\n      c.pin = state ? type : undefined;\n      if (type === 'end') {\n        c.columnDef.stickyEnd = state;\n        c.columnDef.sticky = false;\n      } else {\n        c.columnDef.sticky = state;\n        c.columnDef.stickyEnd = false;\n      }\n    }\n  }\n  if (changed) {\n    const cdkTable = PblNgridPluginController.find(grid).extApi.cdkTable;\n    cdkTable.updateStickyColumnStyles();\n  }\n}\n\n@Directive({ selector: 'pbl-ngrid[stickyColumnStart], pbl-ngrid[stickyColumnEnd], pbl-ngrid[stickyHeader], pbl-ngrid[stickyFooter]' })\nexport class PblNgridStickyPluginDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Set the header rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `grid` - Literal string `grid` that will set the grid's main header row.\n   *   - number  - The index of the row, for multi-header row. The index refers to the order you defined the header/headerGroup rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyColumnStart(value: Array<string | number>) {\n    if (!this._startDiffer) {\n      this._startDiffer = this._differs.find([]).create();\n    }\n    this.applyColumnDiff('start', value, this._startDiffer);\n  }\n\n  /**\n   * Set the footer rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `grid` - Literal string `grid` that will set the grid's main footer row.\n   *   - number  - The index of the row, for multi-footer row. The index refers to the order you defined the footer rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyColumnEnd(value: Array<string | number>) {\n    if (!this._endDiffer) {\n      this._endDiffer = this._differs.find([]).create();\n    }\n    this.applyColumnDiff('end', value, this._endDiffer);\n  }\n\n    /**\n   * Set the header rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `grid` - Literal string `grid` that will set the grid's main header row.\n   *   - number  - The index of the row, for multi-header row. The index refers to the order you defined the header/headerGroup rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyHeader(value: Array<'table' | number>) {\n    if (!this._headerDiffer) {\n      this._headerDiffer = this._differs.find([]).create();\n    }\n    this.applyRowDiff('header', value, this._headerDiffer);\n  }\n\n  /**\n   * Set the footer rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `grid` - Literal string `grid` that will set the grid's main footer row.\n   *   - number  - The index of the row, for multi-footer row. The index refers to the order you defined the footer rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyFooter(value: Array<'table' | number>) {\n    if (!this._footerDiffer) {\n      this._footerDiffer = this._differs.find([]).create();\n    }\n    this.applyRowDiff('footer', value, this._footerDiffer);\n  }\n\n  private _startDiffer: IterableDiffer<string | number>;\n  private _endDiffer: IterableDiffer<string | number>;\n  private _headerDiffer: IterableDiffer<'table' | number>;\n  private _footerDiffer: IterableDiffer<'table' | number>;\n\n  private _columnCache: { start: Array<string | number>; end: Array<string | number>; } = { start: [], end: [] };\n  private _removePlugin: (grid: PblNgridComponent<any>) => void;\n  private viewInitialized = false;\n\n  constructor (protected readonly grid: PblNgridComponent<any>,\n               protected readonly _differs: IterableDiffers,\n               protected readonly pluginCtrl: PblNgridPluginController) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    pluginCtrl.events\n      .pipe(ON_RESIZE_ROW)\n      .subscribe( () => {\n        const cdkTable = pluginCtrl.extApi.cdkTable;\n        cdkTable.updateStickyHeaderRowStyles();\n        cdkTable.updateStickyColumnStyles();\n        cdkTable.updateStickyFooterRowStyles();\n      });\n\n      pluginCtrl.events\n        .pipe(ON_INVALIDATE_HEADERS)\n        .subscribe( () => {\n          if (this._startDiffer && this.grid.isInit) {\n            this._startDiffer.diff([]);\n            this.applyColumnDiff('start', this._columnCache.start, this._startDiffer)\n          }\n\n          if (this._endDiffer && this.grid.isInit) {\n            this._endDiffer.diff([]);\n            this.applyColumnDiff('end', this._columnCache.end, this._endDiffer)\n          }\n        });\n  }\n\n  ngAfterViewInit(): void {\n    this.viewInitialized = true;\n  }\n\n  ngOnDestroy(): void {\n    this._removePlugin(this.grid);\n  }\n\n  protected applyColumnDiff(type: 'start' | 'end', value: Array<string | number>, differ: IterableDiffer<string | number>): void {\n    if (!this.viewInitialized) {\n      requestAnimationFrame(() => this.applyColumnDiff(type, value, differ));\n      return;\n    }\n\n    this._columnCache[type] = value || [];\n\n    const changes = differ.diff(value || []);\n    const bulk: Array<[string | number, boolean]> = [];\n    changes.forEachOperation((record: IterableChangeRecord<string | number>, prevIndex: number, currentIndex: number) => {\n      if (record.previousIndex == null) {\n        bulk.push([record.item, true]);\n      } else if (currentIndex == null) {\n        bulk.push([record.item, false]);\n      }\n    });\n    if (bulk.length > 0) {\n      setStickyColumns(this.grid, type, bulk);\n    }\n  }\n\n  protected applyRowDiff(type: 'header' | 'footer', value: Array<'table' | number>, differ: IterableDiffer<'table' | number>): void {\n    if (!this.grid.isInit) {\n      this.pluginCtrl.onInit()\n        .subscribe(() => {\n          this.applyRowDiff(type, value, differ);\n        });\n      return;\n    }\n\n    const changes = differ.diff(value || []);\n    const bulk: Array<['table' | number, boolean]> = [];\n    changes.forEachOperation((record: IterableChangeRecord<'table' | number>, prevIndex: number, currentIndex: number) => {\n      if (record.previousIndex == null) {\n        bulk.push([record.item, true]);\n      } else if (currentIndex == null) {\n        bulk.push([record.item, false]);\n      }\n    });\n    if (bulk.length > 0) {\n      setStickyRow(this.grid, type, bulk);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PblNgridConfigService } from '@asafmalin/ngrid/core';\n\nimport { PblNgridModule, PblNgridPluginController, ngridPlugin } from '@asafmalin/ngrid';\nimport { PblNgridStickyPluginDirective, setStickyRow, setStickyColumns, PLUGIN_KEY } from './sticky/sticky-plugin';\n\ndeclare module '@asafmalin/ngrid/core/lib/configuration/type' {\n  interface PblNgridConfig {\n    stickyPlugin?: {\n      headers?: Array<'table' | number>;\n      footers?: Array<'table' | number>;\n      columnStart?: Array<string | number>;\n      columnEnd?: Array<string | number>;\n    }\n  }\n}\n\nconst MAPPER = <T>(v: T): [T, boolean] => [v, true];\n\n@NgModule({\n  imports: [ CommonModule, CdkTableModule, PblNgridModule ],\n  declarations: [ PblNgridStickyPluginDirective ],\n  exports: [ PblNgridStickyPluginDirective ],\n})\nexport class PblNgridStickyModule {\n\n  static readonly NGRID_PLUGIN = ngridPlugin({ id: PLUGIN_KEY }, PblNgridStickyPluginDirective);\n\n  constructor(configService: PblNgridConfigService) {\n    PblNgridPluginController.onCreatedSafe(\n      PblNgridStickyModule,\n      (grid, controller) => {\n        if (controller && !controller.hasPlugin('sticky')) {\n          controller.onInit()\n            .subscribe(() => {\n              const stickyPluginConfig = configService.get('stickyPlugin');\n              if (stickyPluginConfig) {\n                if (stickyPluginConfig.headers) {\n                  setStickyRow(grid, 'header', stickyPluginConfig.headers.map(MAPPER));\n                }\n                if (stickyPluginConfig.footers) {\n                  setStickyRow(grid, 'footer', stickyPluginConfig.footers.map(MAPPER));\n                }\n                if (stickyPluginConfig.columnStart) {\n                  setStickyColumns(grid, 'start', stickyPluginConfig.columnStart.map(MAPPER));\n                }\n                if (stickyPluginConfig.columnEnd) {\n                  setStickyColumns(grid, 'end', stickyPluginConfig.columnEnd.map(MAPPER));\n                }\n              }\n            });\n        }\n      },\n    );\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":"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"}