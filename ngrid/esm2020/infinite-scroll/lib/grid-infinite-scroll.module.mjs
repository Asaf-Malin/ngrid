import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CdkTableModule } from '@angular/cdk/table';
import { PblNgridModule, ngridPlugin, PblNgridPluginController } from '@asafmalin/ngrid';
import { PblNgridTargetEventsModule } from '@asafmalin/ngrid/target-events';
import './infinite-scroll-plugin'; // to make sure d.ts stay in published lib and so agumentation kicks in
import { PblNgridInfiniteScrollPlugin, PLUGIN_KEY } from './infinite-scroll-plugin';
import { PblNgridInfiniteVirtualRowRefDirective } from './infinite-virtual-row/directives';
import { PblNgridDefaultInfiniteVirtualRowComponent } from './default-infinite-virtual-row/default-infinite-virtual-row.component';
import { PblNgridInfiniteRowComponent } from './infinite-virtual-row/row';
import * as i0 from "@angular/core";
export class PblNgridInfiniteScrollModule {
    constructor() {
        PblNgridPluginController.onCreatedSafe(PblNgridInfiniteScrollModule, (grid, controller) => {
            if (controller && controller.hasAncestor(PblNgridInfiniteScrollModule)) {
                controller.createPlugin(PLUGIN_KEY);
            }
        });
    }
}
PblNgridInfiniteScrollModule.NGRID_PLUGIN = ngridPlugin({ id: PLUGIN_KEY, factory: 'create' }, PblNgridInfiniteScrollPlugin);
/** @nocollapse */ PblNgridInfiniteScrollModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.4", ngImport: i0, type: PblNgridInfiniteScrollModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ PblNgridInfiniteScrollModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.4", ngImport: i0, type: PblNgridInfiniteScrollModule, declarations: [PblNgridInfiniteVirtualRowRefDirective, PblNgridInfiniteRowComponent, PblNgridDefaultInfiniteVirtualRowComponent], imports: [CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule], exports: [PblNgridInfiniteVirtualRowRefDirective, PblNgridInfiniteRowComponent] });
/** @nocollapse */ PblNgridInfiniteScrollModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.4", ngImport: i0, type: PblNgridInfiniteScrollModule, imports: [CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.4", ngImport: i0, type: PblNgridInfiniteScrollModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule],
                    declarations: [PblNgridInfiniteVirtualRowRefDirective, PblNgridInfiniteRowComponent, PblNgridDefaultInfiniteVirtualRowComponent],
                    exports: [PblNgridInfiniteVirtualRowRefDirective, PblNgridInfiniteRowComponent]
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1pbmZpbml0ZS1zY3JvbGwubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3JpZC9pbmZpbml0ZS1zY3JvbGwvc3JjL2xpYi9ncmlkLWluZmluaXRlLXNjcm9sbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRXpFLE9BQU8sMEJBQTBCLENBQUMsQ0FBQyx1RUFBdUU7QUFDMUcsT0FBTyxFQUFFLDRCQUE0QixFQUFFLFVBQVUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3BGLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzNGLE9BQU8sRUFBRSwwQ0FBMEMsRUFBRSxNQUFNLHVFQUF1RSxDQUFDO0FBQ25JLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOztBQU8xRSxNQUFNLE9BQU8sNEJBQTRCO0lBR3ZDO1FBQ0Usd0JBQXdCLENBQUMsYUFBYSxDQUNwQyw0QkFBNEIsRUFDNUIsQ0FBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLEVBQUU7WUFDbkIsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLFdBQVcsQ0FBQyw0QkFBNEIsQ0FBQyxFQUFFO2dCQUN0RSxVQUFVLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ3JDO1FBQ0gsQ0FBQyxDQUNGLENBQUM7SUFDSixDQUFDOztBQVhlLHlDQUFZLEdBQUcsV0FBVyxDQUFDLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsNEJBQTRCLENBQUMsQ0FBQzs0SUFEckcsNEJBQTRCOzZJQUE1Qiw0QkFBNEIsaUJBSHRCLHNDQUFzQyxFQUFFLDRCQUE0QixFQUFFLDBDQUEwQyxhQURySCxZQUFZLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSwwQkFBMEIsYUFFeEUsc0NBQXNDLEVBQUUsNEJBQTRCOzZJQUVyRSw0QkFBNEIsWUFKM0IsWUFBWSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsMEJBQTBCOzJGQUl6RSw0QkFBNEI7a0JBTHhDLFFBQVE7bUJBQUM7b0JBQ04sT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsMEJBQTBCLENBQUM7b0JBQ25GLFlBQVksRUFBRSxDQUFDLHNDQUFzQyxFQUFFLDRCQUE0QixFQUFFLDBDQUEwQyxDQUFDO29CQUNoSSxPQUFPLEVBQUUsQ0FBQyxzQ0FBc0MsRUFBRSw0QkFBNEIsQ0FBQztpQkFDbEYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgQ2RrVGFibGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvdGFibGUnO1xuaW1wb3J0IHsgUGJsTmdyaWRNb2R1bGUsIG5ncmlkUGx1Z2luLCBQYmxOZ3JpZFBsdWdpbkNvbnRyb2xsZXIgfSBmcm9tICdAcGVidWxhL25ncmlkJztcbmltcG9ydCB7IFBibE5ncmlkVGFyZ2V0RXZlbnRzTW9kdWxlIH0gZnJvbSAnQHBlYnVsYS9uZ3JpZC90YXJnZXQtZXZlbnRzJztcblxuaW1wb3J0ICcuL2luZmluaXRlLXNjcm9sbC1wbHVnaW4nOyAvLyB0byBtYWtlIHN1cmUgZC50cyBzdGF5IGluIHB1Ymxpc2hlZCBsaWIgYW5kIHNvIGFndW1lbnRhdGlvbiBraWNrcyBpblxuaW1wb3J0IHsgUGJsTmdyaWRJbmZpbml0ZVNjcm9sbFBsdWdpbiwgUExVR0lOX0tFWSB9IGZyb20gJy4vaW5maW5pdGUtc2Nyb2xsLXBsdWdpbic7XG5pbXBvcnQgeyBQYmxOZ3JpZEluZmluaXRlVmlydHVhbFJvd1JlZkRpcmVjdGl2ZSB9IGZyb20gJy4vaW5maW5pdGUtdmlydHVhbC1yb3cvZGlyZWN0aXZlcyc7XG5pbXBvcnQgeyBQYmxOZ3JpZERlZmF1bHRJbmZpbml0ZVZpcnR1YWxSb3dDb21wb25lbnQgfSBmcm9tICcuL2RlZmF1bHQtaW5maW5pdGUtdmlydHVhbC1yb3cvZGVmYXVsdC1pbmZpbml0ZS12aXJ0dWFsLXJvdy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGJsTmdyaWRJbmZpbml0ZVJvd0NvbXBvbmVudCB9IGZyb20gJy4vaW5maW5pdGUtdmlydHVhbC1yb3cvcm93JztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBDZGtUYWJsZU1vZHVsZSwgUGJsTmdyaWRNb2R1bGUsIFBibE5ncmlkVGFyZ2V0RXZlbnRzTW9kdWxlXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtQYmxOZ3JpZEluZmluaXRlVmlydHVhbFJvd1JlZkRpcmVjdGl2ZSwgUGJsTmdyaWRJbmZpbml0ZVJvd0NvbXBvbmVudCwgUGJsTmdyaWREZWZhdWx0SW5maW5pdGVWaXJ0dWFsUm93Q29tcG9uZW50XSxcbiAgICBleHBvcnRzOiBbUGJsTmdyaWRJbmZpbml0ZVZpcnR1YWxSb3dSZWZEaXJlY3RpdmUsIFBibE5ncmlkSW5maW5pdGVSb3dDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFBibE5ncmlkSW5maW5pdGVTY3JvbGxNb2R1bGUge1xuICBzdGF0aWMgcmVhZG9ubHkgTkdSSURfUExVR0lOID0gbmdyaWRQbHVnaW4oeyBpZDogUExVR0lOX0tFWSwgZmFjdG9yeTogJ2NyZWF0ZScgfSwgUGJsTmdyaWRJbmZpbml0ZVNjcm9sbFBsdWdpbik7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgUGJsTmdyaWRQbHVnaW5Db250cm9sbGVyLm9uQ3JlYXRlZFNhZmUoXG4gICAgICBQYmxOZ3JpZEluZmluaXRlU2Nyb2xsTW9kdWxlLFxuICAgICAgKGdyaWQsIGNvbnRyb2xsZXIpID0+IHtcbiAgICAgICAgaWYgKGNvbnRyb2xsZXIgJiYgY29udHJvbGxlci5oYXNBbmNlc3RvcihQYmxOZ3JpZEluZmluaXRlU2Nyb2xsTW9kdWxlKSkge1xuICAgICAgICAgIGNvbnRyb2xsZXIuY3JlYXRlUGx1Z2luKFBMVUdJTl9LRVkpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICk7XG4gIH1cbn1cbiJdfQ==