{"version":3,"file":"pebula-ngrid-material-cell-tooltip.mjs","sources":["../../../../libs/ngrid-material/cell-tooltip/src/lib/cell-tooltip.directive.ts","../../../../libs/ngrid-material/cell-tooltip/src/lib/cell-tooltip.module.ts","../../../../libs/ngrid-material/cell-tooltip/src/pebula-ngrid-material-cell-tooltip.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Injector,\n  OnDestroy,\n  Input,\n  NgZone,\n  ViewContainerRef,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { BooleanInput, coerceBooleanProperty, NumberInput } from '@angular/cdk/coercion';\nimport { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Platform} from '@angular/cdk/platform';\nimport { TooltipPosition, MatTooltipDefaultOptions, MatTooltip, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_DEFAULT_OPTIONS } from '@angular/material/tooltip';\n\nimport { unrx, PblNgridConfigService } from '@asafmalin/ngrid/core';\nimport { PblNgridComponent, PblNgridPluginController } from '@asafmalin/ngrid';\nimport { PblNgridCellEvent } from '@asafmalin/ngrid/target-events';\n\ndeclare module '@asafmalin/ngrid/core/lib/configuration/type' {\n  interface PblNgridConfig {\n    cellTooltip?: CellTooltipOptions & {\n      /** When set to true will apply the default cell tooltip to ALL tables */\n      autoSetAll?: boolean;\n    };\n  }\n}\n\ndeclare module '@asafmalin/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    cellTooltip?: PblNgridCellTooltipDirective<any>;\n  }\n  interface PblNgridPluginExtensionFactories {\n    cellTooltip: keyof typeof PblNgridCellTooltipDirective;\n  }\n}\n\nexport const PLUGIN_KEY: 'cellTooltip' = 'cellTooltip';\n\nconst DEFAULT_OPTIONS: CellTooltipOptions = {\n  canShow: (event: PblNgridCellEvent<any>): boolean => {\n    const element = (event.cellTarget.firstElementChild || event.cellTarget) as HTMLElement;\n    return element.scrollWidth > element.offsetWidth;\n  },\n  message: (event: PblNgridCellEvent<any>): string => {\n    return event.cellTarget.innerText;\n  }\n};\n\nexport interface CellTooltipOptions {\n  canShow?: boolean | ( (event: PblNgridCellEvent<any>) => boolean );\n  message?: (event: PblNgridCellEvent<any>) => string;\n}\n\n@Directive({ selector: '[cellTooltip]', exportAs: 'pblOverflowTooltip' })\nexport class PblNgridCellTooltipDirective<T> implements CellTooltipOptions, OnDestroy {\n  static readonly PLUGIN_KEY: 'cellTooltip' = PLUGIN_KEY;\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('cellTooltip') set canShow(value: boolean | ( (event: PblNgridCellEvent<T>) => boolean )) {\n    if (typeof value === 'function') {\n      this._canShow = value;\n    } else if ( (value as any) === '') {\n      this._canShow = undefined;\n    } else {\n      this._canShow = coerceBooleanProperty(value) ? e => true : e => false;\n    }\n  }\n\n  @Input() message: (event: PblNgridCellEvent<T>) => string;\n\n  /** See Material docs for MatTooltip */\n  @Input() position: TooltipPosition;\n  /** See Material docs for MatTooltip */\n  @Input() tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n  /** See Material docs for MatTooltip */\n  @Input() showDelay: number;\n  /** See Material docs for MatTooltip */\n  @Input() hideDelay: number;\n\n  private initArgs: [ Overlay, ElementRef<HTMLElement>, ScrollDispatcher, ViewContainerRef, NgZone, Platform, AriaDescriber, FocusMonitor, any, Directionality, MatTooltipDefaultOptions, any];\n\n  private toolTip: MatTooltip;\n  private lastConfig: CellTooltipOptions;\n  private _removePlugin: (table: PblNgridComponent<any>) => void;\n  private _canShow: (event: PblNgridCellEvent<T>) => boolean;\n\n  constructor(private table: PblNgridComponent<any>, private injector: Injector, pluginCtrl: PblNgridPluginController) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    const configService = injector.get(PblNgridConfigService);\n\n    this.initArgs = [\n      injector.get(Overlay),\n      null,\n      injector.get(ScrollDispatcher),\n      injector.get(ViewContainerRef),\n      injector.get(NgZone),\n      injector.get(Platform),\n      injector.get(AriaDescriber),\n      injector.get(FocusMonitor),\n      injector.get(MAT_TOOLTIP_SCROLL_STRATEGY),\n      injector.get(Directionality),\n      injector.get(MAT_TOOLTIP_DEFAULT_OPTIONS),\n      injector.get(DOCUMENT),\n    ];\n\n    configService.onUpdate('cellTooltip')\n      .pipe(unrx(this))\n      .subscribe( cfg => this.lastConfig = cfg.curr );\n\n    pluginCtrl.onInit().subscribe( () => this.init(pluginCtrl) );\n  }\n\n  static create<T = any>(table: PblNgridComponent<any>, injector: Injector): PblNgridCellTooltipDirective<T> {\n    return new PblNgridCellTooltipDirective<T>(table, injector, PblNgridPluginController.find(table));\n  }\n\n  ngOnDestroy(): void {\n    this._removePlugin(this.table);\n    this.killTooltip();\n    unrx.kill(this);\n  }\n\n  private init(pluginCtrl: PblNgridPluginController): void {\n    // Depends on target-events plugin\n    // if it's not set, create it.\n    const targetEventsPlugin = pluginCtrl.getPlugin('targetEvents') || pluginCtrl.createPlugin('targetEvents');\n    targetEventsPlugin.cellEnter\n      .pipe(unrx(this))\n      .subscribe( event => this.cellEnter(event) );\n\n    targetEventsPlugin.cellLeave\n      .pipe(unrx(this))\n      .subscribe( event => this.cellLeave(event) );\n  }\n\n  private cellEnter(event: PblNgridCellEvent<T>): void {\n    this.killTooltip();\n\n    if (!this._canShow) {\n      // TODO: this will set lastConfig / default option once\n      // but if user changes lastConfig it will never update again...\n      this.canShow = (this.lastConfig && this.lastConfig.canShow) || DEFAULT_OPTIONS.canShow;\n    }\n\n    if (this._canShow(event)) {\n      const params = this.initArgs.slice() as PblNgridCellTooltipDirective<any>['initArgs'];\n      params[1] = new ElementRef<any>(event.cellTarget);\n\n      this.toolTip = new MatTooltip(...params);\n\n      const message = this.message || (this.lastConfig && this.lastConfig.message) || DEFAULT_OPTIONS.message;\n      this.toolTip.message = message(event);\n\n      if (this.position) {\n        this.toolTip.position = this.position;\n      }\n      if (this.tooltipClass) {\n        this.toolTip.tooltipClass = this.tooltipClass;\n      }\n      if (this.showDelay >= 0) {\n        this.toolTip.showDelay = this.showDelay;\n      }\n      if (this.hideDelay >= 0) {\n        this.toolTip.hideDelay = this.hideDelay;\n      }\n      this.toolTip.show();\n    }\n  }\n\n  private cellLeave(event: PblNgridCellEvent<T>): void {\n    this.killTooltip();\n  }\n\n  private killTooltip(): void {\n    if (this.toolTip) {\n      this.toolTip.hide();\n      this.toolTip.ngOnDestroy();\n      this.toolTip = undefined;\n    }\n  }\n\n  static ngAcceptInputType_canShow: BooleanInput;\n  static ngAcceptInputType_showDelay: NumberInput;\n  static ngAcceptInputType_hideDelay: NumberInput;\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { PblNgridConfigService } from '@asafmalin/ngrid/core';\nimport { PblNgridModule, PblNgridPluginController, ngridPlugin } from '@asafmalin/ngrid';\nimport { PblNgridTargetEventsModule } from '@asafmalin/ngrid/target-events';\n\nimport { PblNgridCellTooltipDirective, PLUGIN_KEY } from './cell-tooltip.directive';\n\n@NgModule({\n  imports: [ CommonModule, MatTooltipModule, OverlayModule, PblNgridModule, PblNgridTargetEventsModule ],\n  declarations: [ PblNgridCellTooltipDirective ],\n  exports: [ PblNgridCellTooltipDirective, MatTooltipModule ],\n})\nexport class PblNgridCellTooltipModule {\n  static readonly NGRID_PLUGIN = ngridPlugin({ id: PLUGIN_KEY, factory: 'create' }, PblNgridCellTooltipDirective);\n\n  constructor(@Optional() @SkipSelf() parentModule: PblNgridCellTooltipModule,\n              configService: PblNgridConfigService) {\n    if (parentModule) {\n      return;\n    }\n\n    PblNgridPluginController.created\n      .subscribe( event => {\n        // Do not remove the explicit reference to `PblNgridCellTooltipDirective`\n        // We use `PblNgridCellTooltipDirective.PLUGIN_KEY` to create a direct reference to `PblNgridCellTooltipDirective`\n        // which will disable dead code elimination for the `PblNgridCellTooltipDirective` plugin.\n        // If it is not set, using the plugin will only work when it is used in templates, other wise, if used programmatically (`autoSetAll`)\n        // CLI prod builds will remove the plugin's code.\n        const cellTooltipConfig = configService.get(PblNgridCellTooltipDirective.PLUGIN_KEY);\n        if (cellTooltipConfig && cellTooltipConfig.autoSetAll === true) {\n          const pluginCtrl = event.controller;\n          pluginCtrl.onInit()\n          .subscribe( evt => pluginCtrl.ensurePlugin(PblNgridCellTooltipDirective.PLUGIN_KEY) );\n        }\n      });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":"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"}