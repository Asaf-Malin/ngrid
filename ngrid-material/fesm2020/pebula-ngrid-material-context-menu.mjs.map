{"version":3,"file":"pebula-ngrid-material-context-menu.mjs","sources":["../../../../libs/ngrid-material/context-menu/src/lib/header-context/header-context-menu.directive.ts","../../../../libs/ngrid-material/context-menu/src/lib/header-context/header-context-menu-trigger.ts","../../../../libs/ngrid-material/context-menu/src/lib/header-context/header-context-menu-trigger.html","../../../../libs/ngrid-material/context-menu/src/lib/header-context/header-context-menu-extension.ts","../../../../libs/ngrid-material/context-menu/src/lib/header-context/styles/excel-style-header-menu.ts","../../../../libs/ngrid-material/context-menu/src/lib/header-context/styles/excel-style-header-menu.html","../../../../libs/ngrid-material/context-menu/src/lib/context-menu.module.ts","../../../../libs/ngrid-material/context-menu/src/pebula-ngrid-material-context-menu.ts"],"sourcesContent":["import { Directive, Input } from '@angular/core';\nimport { PblNgridPluginController } from '@asafmalin/ngrid';\nimport { PblNgridOverlayPanelFactory, PblNgridOverlayPanel, PblNgridOverlayPanelConfig } from '@asafmalin/ngrid/overlay-panel';\n\ndeclare module '@asafmalin/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    matHeaderContextMenu?: PblNgridMatHeaderContextMenuPlugin;\n  }\n}\n\nexport const PLUGIN_KEY: 'matHeaderContextMenu' = 'matHeaderContextMenu';\n\n@Directive({ selector: 'pbl-ngrid[matHeaderContextMenu]', providers: [ PblNgridOverlayPanelFactory ] })\nexport class PblNgridMatHeaderContextMenuPlugin {\n\n  @Input('matHeaderContextMenu') style: any;\n  @Input() config: PblNgridOverlayPanelConfig;\n\n  readonly overlayPanel: PblNgridOverlayPanel;\n\n  constructor(overlayPanelFactory: PblNgridOverlayPanelFactory,\n              public readonly pluginCtrl: PblNgridPluginController) {\n    this.overlayPanel = overlayPanelFactory.create(pluginCtrl.extApi.grid);\n  }\n\n}\n","import { Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { PblNgridDataHeaderExtensionContext } from '@asafmalin/ngrid';\nimport { PblNgridOverlayPanelConfig } from '@asafmalin/ngrid/overlay-panel';\n\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context-menu.directive';\n\nconst DEFAULT_CONFIG: PblNgridOverlayPanelConfig = { hasBackdrop: true, xPos: 'after', yPos: 'below' };\n\n@Component({\n  selector: 'div[mat-header-context-menu-trigger]',\n  host: {\n    class: 'mat-header-context-menu-trigger',\n    '(click)': 'openOverlayPanel()',\n  },\n  templateUrl: `./header-context-menu-trigger.html`,\n  styleUrls: [ `./header-context-menu-trigger.scss` ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatHeaderContextMenuTrigger {\n\n  context: PblNgridDataHeaderExtensionContext;\n\n  constructor(private plugin: PblNgridMatHeaderContextMenuPlugin, private elRef: ElementRef<HTMLElement>) { }\n\n  openOverlayPanel() {\n    const config = this.plugin.config || DEFAULT_CONFIG;\n    this.plugin.overlayPanel.open(this.plugin.style, this.elRef, config, this.context);\n  }\n}\n","<mat-icon style=\"height: 16px; width: 16px; font-size: 16px; line-height: 16px;\">more_vert</mat-icon>\n","import { ComponentFactory, ComponentRef, ComponentFactoryResolver } from '@angular/core';\nimport { PblNgridMultiComponentRegistry, PblNgridDataHeaderExtensionContext } from '@asafmalin/ngrid';\n\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context-menu.directive';\nimport { MatHeaderContextMenuTrigger } from './header-context-menu-trigger';\n\nexport class MatHeaderContextMenuExtension extends PblNgridMultiComponentRegistry<MatHeaderContextMenuTrigger, 'dataHeaderExtensions'> {\n  readonly name: 'matHeaderContextMenuTrigger' = 'matHeaderContextMenuTrigger';\n  readonly kind: 'dataHeaderExtensions' = 'dataHeaderExtensions';\n  readonly projectContent = false;\n\n  constructor(private cfr: ComponentFactoryResolver) { super(); }\n\n  shouldRender(context: PblNgridDataHeaderExtensionContext): boolean {\n    return !!context.injector.get(PblNgridMatHeaderContextMenuPlugin, false);\n  }\n\n  getFactory(context: PblNgridDataHeaderExtensionContext): ComponentFactory<MatHeaderContextMenuTrigger> {\n    return this.cfr.resolveComponentFactory(MatHeaderContextMenuTrigger);\n  }\n\n  onCreated(context: PblNgridDataHeaderExtensionContext, cmpRef: ComponentRef<MatHeaderContextMenuTrigger>): void {\n    cmpRef.instance.context = context;\n    cmpRef.changeDetectorRef.markForCheck();\n  }\n}\n","import { Component, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\n\nimport { PblNgridComponent, PblColumn, PblNgridDataHeaderExtensionContext } from '@asafmalin/ngrid';\nimport { PblNgridOverlayPanelRef } from '@asafmalin/ngrid/overlay-panel';\n\n@Component({\n  selector: 'mat-excel-style-header-menu',\n  templateUrl: `./excel-style-header-menu.html`,\n  styleUrls: [ `./excel-style-header-menu.scss` ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatExcelStyleHeaderMenu {\n  column: PblColumn;\n  grid: PblNgridComponent\n\n  @ViewChild('columnMenu', { read: MatMenu, static: true }) matMenu: MatMenu;\n  @ViewChild('menuViewLocation', { read: ViewContainerRef, static: true }) menuViewLocation: ViewContainerRef;\n\n  currentSort: 'asc' | 'desc' | undefined;\n  currentPin: 'start' | 'end' | undefined;\n  currentFilter: any = '';\n\n  constructor(private ref: PblNgridOverlayPanelRef<PblNgridDataHeaderExtensionContext>) {\n    this.column = ref.data.col;\n    this.grid = ref.data.grid;\n\n    if (this.grid.ds.sort.column === this.column) {\n      this.currentSort = this.grid.ds.sort.sort.order;\n    }\n    this.currentPin = this.column.columnDef.sticky ? 'start' : this.column.columnDef.stickyEnd ? 'end' : undefined;\n    const dsFilter = this.grid.ds.filter;\n    if (dsFilter && dsFilter.type === 'value' && dsFilter.columns && dsFilter.columns.indexOf(this.column) >= 0) {\n      this.currentFilter = dsFilter.filter;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.matMenu.closed.subscribe( reason => {\n      this.ref.close();\n    });\n\n    const view = this.menuViewLocation.createEmbeddedView(this.matMenu.templateRef);\n    this.matMenu.setElevation(0);\n    this.matMenu.focusFirstItem('program');\n    this.matMenu._resetAnimation();\n    view.markForCheck();\n    view.detectChanges();\n    this.matMenu._startAnimation();\n  }\n\n  hide(): void {\n    this.grid.columnApi.hideColumns(this.column.id);\n  }\n\n  onSortToggle(sort: 'asc' | 'desc'): void {\n    if (this.currentSort === sort) {\n      this.grid.ds.setSort();\n    } else {\n      this.grid.ds.setSort(this.column, { order: sort });\n    }\n  }\n\n  onPinToggle(pin: 'start' | 'end'): void {\n    if (this.currentPin === pin) {\n      this.column.columnDef.updatePin()\n    } else {\n      this.column.columnDef.updatePin(pin)\n    }\n  }\n\n  filterColumn(filterValue: string) {\n    this.currentFilter = filterValue;\n    if (!filterValue) {\n      this.grid.setFilter();\n    } else {\n      this.grid.setFilter(filterValue.trim(), [ this.column ]);\n    }\n  }\n\n  clickTrap(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","<mat-menu #columnMenu=\"matMenu\" class=\"pbl-mat-menu-panel\">\n\n  <button *ngIf=\"column.sort\" mat-menu-item [matMenuTriggerFor]=\"sortMenu\">\n    <mat-icon>sort</mat-icon>Sort\n  </button>\n  <button mat-menu-item [matMenuTriggerFor]=\"pinMenu\">\n    <mat-icon>place</mat-icon>Pin\n  </button>\n  <button mat-menu-item (click)=\"grid.columnApi.autoSizeColumn(column)\">\n    <mat-icon>keyboard_tab</mat-icon>Auto Fit\n  </button>\n  <button mat-menu-item (click)=\"hide()\">\n    <mat-icon>visibility_off</mat-icon>Hide Column\n  </button>\n\n  <mat-menu #sortMenu=\"matMenu\">\n    <button mat-menu-item (click)=\"onSortToggle('asc')\" [class.menu-item-selected]=\"currentSort === 'asc'\">\n      <mat-icon [color]=\"currentSort === 'asc' ? 'primary' : ''\">arrow_upward</mat-icon>\n      <span>Ascending</span>\n    </button>\n    <button mat-menu-item (click)=\"onSortToggle('desc')\" [class.menu-item-selected]=\"currentSort === 'desc'\">\n      <mat-icon [color]=\"currentSort === 'desc' ? 'primary' : ''\">arrow_downward</mat-icon>\n      <span>Descending</span>\n    </button>\n  </mat-menu>\n\n  <mat-menu #pinMenu=\"matMenu\">\n    <button mat-menu-item (click)=\"onPinToggle('start')\" [class.menu-item-selected]=\"currentPin === 'start'\">\n      <span>Start</span>\n    </button>\n    <button mat-menu-item (click)=\"onPinToggle('end')\" [class.menu-item-selected]=\"currentPin === 'end'\">\n      <span>End</span>\n    </button>\n  </mat-menu>\n\n  <div class=\"mat-menu-item pbl-mat-menu-row\" (click)=\"clickTrap($event)\">\n    <mat-form-field>\n      <mat-label>Search</mat-label>\n      <input #input matInput (keyup)=\"filterColumn(input.value)\" [value]=\"currentFilter\">\n      <mat-icon matPrefix>search</mat-icon>\n      <button mat-button [style.visibility]=\"currentFilter ? 'visible' : 'hidden'\" matSuffix mat-icon-button aria-label=\"Clear\"\n              (click)=\"filterColumn('')\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n</mat-menu>\n<ng-container #menuViewLocation></ng-container>\n","import { NgModule, Optional, SkipSelf, ComponentFactoryResolver } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { PblNgridConfigService } from '@asafmalin/ngrid/core';\nimport { PblNgridRegistryService, PblNgridModule, ngridPlugin } from '@asafmalin/ngrid';\nimport { PblNgridOverlayPanelModule, PblNgridOverlayPanelComponentExtension } from '@asafmalin/ngrid/overlay-panel';\n\nimport { MatHeaderContextMenuTrigger } from './header-context/header-context-menu-trigger';\nimport { MatHeaderContextMenuExtension } from './header-context/header-context-menu-extension';\nimport { PblNgridMatHeaderContextMenuPlugin, PLUGIN_KEY } from './header-context/header-context-menu.directive';\nimport { MatExcelStyleHeaderMenu } from './header-context/styles/excel-style-header-menu';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatMenuModule,\n        MatFormFieldModule,\n        MatInputModule,\n        PblNgridModule,\n        PblNgridOverlayPanelModule,\n    ],\n    declarations: [\n        MatHeaderContextMenuTrigger,\n        PblNgridMatHeaderContextMenuPlugin,\n        MatExcelStyleHeaderMenu,\n    ],\n    exports: [\n        PblNgridMatHeaderContextMenuPlugin,\n    ]\n})\nexport class PblNgridContextMenuModule {\n  static readonly NGRID_PLUGIN = ngridPlugin({ id: PLUGIN_KEY }, PblNgridMatHeaderContextMenuPlugin);\n\n  constructor(@Optional() @SkipSelf() parentModule: PblNgridContextMenuModule,\n              registry: PblNgridRegistryService,\n              cfr: ComponentFactoryResolver,\n              configService: PblNgridConfigService) {\n    if (parentModule) {\n      return;\n    }\n    registry.addMulti('dataHeaderExtensions', new MatHeaderContextMenuExtension(cfr));\n    registry.addMulti('overlayPanels', new PblNgridOverlayPanelComponentExtension('excelMenu', MatExcelStyleHeaderMenu, cfr));\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.PblNgridMatHeaderContextMenuPlugin","i2","i3","i1"],"mappings":"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"}